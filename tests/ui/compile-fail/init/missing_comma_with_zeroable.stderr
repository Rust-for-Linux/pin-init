error[E0782]: trait objects must include the `dyn` keyword
  --> tests/ui/compile-fail/init/missing_comma_with_zeroable.rs:13:15
   |
13 |         a: 0..Zeroable::zeroed()
   |               ^^^^^^^^
   |
help: add `dyn` keyword before this trait
   |
13 |         a: 0..<dyn Zeroable>::zeroed()
   |               ++++         +

error[E0599]: no function or associated item named `zeroed` found for trait `pinned_init::Zeroable`
  --> tests/ui/compile-fail/init/missing_comma_with_zeroable.rs:13:25
   |
13 |         a: 0..Zeroable::zeroed()
   |                         ^^^^^^ function or associated item not found in `Zeroable`

error[E0308]: mismatched types
  --> tests/ui/compile-fail/init/missing_comma_with_zeroable.rs:12:13
   |
12 |       let _ = init!(Foo {
   |  _____________^
13 | |         a: 0..Zeroable::zeroed()
14 | |     });
   | |      ^
   | |      |
   | |______expected `usize`, found `Range<{integer}>`
   |        arguments to this function are incorrect
   |
   = note: expected type `usize`
            found struct `std::ops::Range<{integer}>`
note: function defined here
  --> $RUST/core/src/ptr/mod.rs
   |
   | pub const unsafe fn write<T>(dst: *mut T, src: T) {
   |                     ^^^^^
   = note: this error originates in the macro `$crate::__init_internal` which comes from the expansion of the macro `init` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0063]: missing field `b` in initializer of `Foo`
  --> tests/ui/compile-fail/init/missing_comma_with_zeroable.rs:12:19
   |
12 |     let _ = init!(Foo {
   |                   ^^^ missing `b`
