permissions:
  contents: read
on:
  push:
    branches: [main]
  pull_request:
name: check
jobs:
  fmt:
    runs-on: ubuntu-latest
    name: nightly / fmt
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: cargo fmt --check
        run: cargo fmt --check
  clippy:
    runs-on: ubuntu-latest
    name: ${{ matrix.toolchain }} / clippy
    permissions:
      contents: read
      checks: write
    strategy:
      fail-fast: false
      matrix:
        toolchain: [nightly]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy
      - name: cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  doc:
    runs-on: ubuntu-latest
    name: nightly / doc
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install nightly
        uses: dtolnay/rust-toolchain@nightly
      - name: cargo doc
        run: cargo doc --no-deps --all-features
        env:
          RUSTDOCFLAGS: --cfg docsrs
  hack:
    runs-on: ubuntu-latest
    name: ubuntu / nightly / features
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install nightly
        uses: dtolnay/rust-toolchain@nightly
      - name: cargo install cargo-hack
        uses: taiki-e/install-action@cargo-hack
      # intentionally no target specifier; see https://github.com/jonhoo/rust-ci-conf/pull/4
      - name: cargo hack
        run: cargo hack --feature-powerset check
  readme:
    runs-on: ubuntu-latest
    name: readme
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-src
      - name: cargo install cargo-rdme
        run: cargo install cargo-rdme
      - name: cargo rdme --check
        run: cargo rdme --check
  stable-msrv:
    runs-on: ubuntu-latest
    # we use a matrix here just because env can't be used in job names
    # https://docs.github.com/en/actions/learn-github-actions/contexts#context-availability
    strategy:
      matrix:
        msrv: [1.82.0] # new_uninit requires this
    name: stable-msrv / ${{ matrix.msrv }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install ${{ matrix.msrv }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.msrv }}
      - name: cargo install cargo-hack
        uses: taiki-e/install-action@cargo-hack
      - name: cargo hack
        run: cargo +${{ matrix.msrv }} hack --feature-powerset --exclude-features alloc,default check
  nightly-msrv:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        msrv: [
          # cannot use stable versions due to unstable features, so use nightly from the day that
          # stable was branched off of master.
          nightly-2024-03-15, # 1.78.0
          nightly-2024-04-26, # 1.79.0
          nightly-2024-06-07, # 1.80.0
          nightly-2024-07-19, # 1.81.0
          # ignored due to buggy unreachable pattern lint with uninhabited types.
          # nightly-2024-08-30, # 1.82.0
          nightly-2024-10-11, # 1.83.0
          nightly-2024-11-22, # 1.84.0
          nightly-2025-01-03, # 1.85.0
          nightly-2025-02-14, # 1.86.0
        ]
      fail-fast: false
    name: nightly-msrv / ${{ matrix.msrv }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install ${{ matrix.msrv }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.msrv }}
      - name: cargo install cargo-hack
        uses: taiki-e/install-action@cargo-hack
      - name: cargo hack
        run: cargo +${{ matrix.msrv }} hack --feature-powerset check
