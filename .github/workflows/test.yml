permissions:
  contents: write
on:
  push:
    branches: [main]
  pull_request:
name: test
jobs:
  required:
    runs-on: ubuntu-latest
    name: ubuntu / ${{ matrix.toolchain }}
    strategy:
      matrix:
        toolchain: [nightly]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rust-src
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      # https://twitter.com/jonhoo/status/1571290371124260865
      - name: cargo test --locked
        run: cargo test --locked --all-features --all-targets
      # https://github.com/rust-lang/cargo/issues/6669
      - name: cargo test --doc
        run: cargo test --locked --all-features --doc
  os-check:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} / nightly
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-src
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo test
        run: cargo test --locked --all-features --all-targets
  coverage:
    runs-on: ubuntu-latest
    name: ubuntu / nightly / coverage
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: llvm-tools-preview,rust-src
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo llvm-cov
        run: |
          mkdir -p coverage/coverage
          cargo llvm-cov --locked --all-features --doctests --html
          mv "target/llvm-cov/html" "coverage/coverage/${{ github.sha }}"
      - name: Upload to gh-pages
        run: |
          cd coverage
          git config --global init.defaultBranch gh-pages
          git init
          git remote add origin "https://github.com/$GITHUB_REPOSITORY"
          git fetch origin
          git pull origin gh-pages
          git config user.name CI
          git config user.email ""
          git add .
          git commit -m "Create coverage of PR #${{ github.event.number }} \`\"${{ github.head_ref }}\"\` (${{ github.sha }})"
          git push "https://x-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY" HEAD:gh-pages
